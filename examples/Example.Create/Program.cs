using KbitSpec;

var outputsDir = Path.Combine("build");
if (Directory.Exists(outputsDir))
{
    Directory.Delete(outputsDir, true);
}
Directory.CreateDirectory(outputsDir);

var font = new KbitFont();
font.Props.EmAscent = 14;
font.Props.EmDescent = 2;
font.Props.LineAscent = 14;
font.Props.LineDescent = 2;
font.Props.XHeight = 7;
font.Props.CapHeight = 10;

font.Names.Version = "1.0.0";
font.Names.Family = "My Font";
font.Names.Style = "Regular";
font.Names.Manufacturer = "Pixel Font Studio";
font.Names.Designer = "TakWolf";
font.Names.Description = "A pixel font";
font.Names.Copyright = "Copyright (c) TakWolf";
font.Names.LicenseDescription = "This Font Software is licensed under the SIL Open Font License, Version 1.1";
font.Names.VendorUrl = "https://github.com/TakWolf/kbitfont-dotnet";
font.Names.DesignerUrl = "https://takwolf.com";
font.Names.LicenseUrl = "https://openfontlicense.org";

font.Characters[65] = new KbitGlyph(
    x: 0,
    y: 14,
    advance: 8,
    bitmap: [
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00],
        [0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00],
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
        [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
    ]);

font.NamedGlyphs[".notdef"] = new KbitGlyph(
    x: 0,
    y: 14,
    advance: 8,
    bitmap: [
        [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF],
        [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]
    ]);

font.SaveKbits(Path.Combine(outputsDir, "my-font.kbits"));
font.SaveKbitx(Path.Combine(outputsDir, "my-font.kbitx"));
